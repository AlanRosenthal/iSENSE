// Generated by CoffeeScript 1.3.3

/*
 * Copyright (c) 2011, iSENSE Project. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer. Redistributions in binary
 * form must reproduce the above copyright notice, this list of conditions and
 * the following disclaimer in the documentation and/or other materials
 * provided with the distribution. Neither the name of the University of
 * Massachusetts Lowell nor the names of its contributors may be used to
 * endorse or promote products derived from this software without specific
 * prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
*/


(function() {
  var BaseVis, _base, _ref, _ref1;

  if ((_ref = window.globals) == null) {
    window.globals = {};
  }

  if ((_ref1 = (_base = window.globals).groupIndex) == null) {
    _base.groupIndex = 0;
  }

  BaseVis = (function() {

    function BaseVis() {
      this.drawControls();
    }

    BaseVis.prototype.drawControls = function() {
      var controls, fieldIndex, group, _i, _j, _len, _len1, _ref2, _ref3;
      controls = '<div class="vis_control_container">';
      controls += '<div class="vis_controls">';
      controls;

      controls += '<table class="vis_control_table"><tr><td class="vis_control_table_title">Groups:</tr></td>';
      controls += '<tr><td><div class="vis_control_table_div">';
      controls += '<select>';
      _ref2 = data.getTextFields();
      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
        fieldIndex = _ref2[_i];
        controls += "<option value=\"" + fieldIndex + "\">" + data.fields[fieldIndex].fieldName + "</option>";
      }
      controls += "</select></div></td></tr>";
      _ref3 = data.getUnique(window.globals.groupIndex);
      for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {
        group = _ref3[_j];
        controls += '<tr><td>';
        controls += '<div class="vis_control_table_div">';
        controls += "<input class=\"group_input\" type=\"checkbox\" name=\"nam\" value=\"" + group + "\"></input>&nbsp";
        controls += "" + group + "&nbsp";
        controls += "</div></td></tr>";
      }
      controls += '</table></div>';
      controls += '</div>';
      return (document.getElementById("controldiv")).innerHTML = controls;
    };

    return BaseVis;

  })();

}).call(this);
